{"version":3,"file":"SelectInput.stories-1553ccec.js","sources":["../../src/components/icons/ArrowDownIcon.tsx","../../src/components/SelectInput/index.tsx"],"sourcesContent":["import { SVGAttributes } from \"react\";\n\nconst ArrowDownIcon = (props: SVGAttributes<SVGSVGElement>) => {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      {...props}\n    >\n      <polyline points=\"5 8.5 12 15.5 19 8.5\" />\n    </svg>\n  );\n};\n\nexport default ArrowDownIcon;\n","import {\n  ComponentProps,\n  MouseEvent,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { cx } from \"class-variance-authority\";\nimport ArrowDownIcon from \"../icons/ArrowDownIcon\";\n\nconst UP_KEY = \"ArrowUp\";\nconst DOWN_KEY = \"ArrowDown\";\n\nexport interface SelectOption {\n  value: string | number;\n  label?: string;\n}\n\nexport interface SelectInputProps\n  extends Omit<ComponentProps<\"input\">, \"onChange\"> {\n  /** The label for the input. */\n  label?: ReactNode;\n  /** The helper text for the input. */\n  helperText?: ReactNode;\n  /** If true, the input will fill the width of its container. */\n  fullWidth?: boolean;\n  /** The icon for the input. */\n  options?: SelectOption[];\n  /** The callback for when the input changes. */\n  onChange?: (value: string | number) => void;\n  // TODO: disabled, error\n}\n\nexport default function SelectInput({\n  label,\n  helperText,\n  fullWidth,\n  options = [],\n  id,\n  name,\n  className,\n  value,\n  onChange,\n  ...props\n}: SelectInputProps) {\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Handle keyboard navigation between options within up and down arrow keys.\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!menuRef.current) return;\n      if (e.key !== UP_KEY && e.key !== DOWN_KEY) return;\n      const optionElements = menuRef.current.querySelectorAll(\"button\");\n      let focusedIndex: number | null = null;\n      for (let index = 0; index < optionElements.length; index++) {\n        const optionElement = optionElements[index];\n        if (optionElement === document.activeElement) {\n          focusedIndex = index;\n          break;\n        }\n      }\n      if (focusedIndex === null) return;\n      if (e.key === DOWN_KEY) {\n        optionElements[focusedIndex + 1]?.focus();\n      }\n      if (e.key === UP_KEY) {\n        optionElements[focusedIndex - 1]?.focus();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const actualValue = useMemo(() => {\n    return options.find((option) => option.value === value);\n  }, [options, value]);\n\n  const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n    const input = e.currentTarget.querySelector(\"input\");\n    input?.focus();\n  };\n\n  const handleOptionClick = (\n    e: MouseEvent<HTMLButtonElement>,\n    option: SelectOption,\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChange?.(option.value);\n    e.currentTarget.blur();\n  };\n\n  return (\n    <div\n      className={cx(\n        \"group flex w-64 flex-col\",\n        fullWidth ? \"w-full\" : \"w-64\",\n        className,\n      )}\n    >\n      {label && (\n        <label\n          className=\"px-1 py-1 text-base font-medium text-neutral-100\"\n          htmlFor={id || name}\n        >\n          {label}\n        </label>\n      )}\n      <div\n        className=\"relative flex flex-row items-center gap-3 rounded border-2 border-neutral-800 bg-inherit px-4 py-3 transition-colors group-focus-within:border-neutral-100\"\n        onClick={handleClick}\n      >\n        <input\n          type=\"text\"\n          className=\"w-0 grow bg-transparent caret-transparent focus:outline-none\"\n          id={id || name}\n          name={name}\n          value={\n            actualValue ? actualValue.label || String(actualValue.value) : \"\"\n          }\n          {...props}\n        />\n        <ArrowDownIcon className=\"rotate-0 transition-transform group-focus-within:rotate-180\" />\n        <div\n          className=\"pointer-events-none absolute left-0 top-full z-10 flex w-full translate-y-0 flex-col rounded border-2 border-neutral-100 bg-neutral-950 opacity-0 transition-all group-focus-within:pointer-events-auto group-focus-within:translate-y-2 group-focus-within:opacity-100\"\n          ref={menuRef}\n        >\n          {options.map((option) => (\n            <button\n              key={option.value}\n              className=\"p-2 text-left transition-colors hover:bg-neutral-100/5 focus:bg-neutral-100/5 focus:outline-none\"\n              onClick={(e) => handleOptionClick(e, option)}\n            >\n              {option.label || String(option.value)}\n            </button>\n          ))}\n        </div>\n      </div>\n      {helperText && (\n        <label\n          className=\"px-4 py-1 text-base font-medium text-neutral-400\"\n          htmlFor={id || name}\n        >\n          {helperText}\n        </label>\n      )}\n    </div>\n  );\n}\n"],"names":["ArrowDownIcon","props","jsx","UP_KEY","DOWN_KEY","SelectInput","label","helperText","fullWidth","options","id","name","className","value","onChange","menuRef","useRef","useEffect","handleKeyDown","e","optionElements","focusedIndex","index","_a","_b","actualValue","useMemo","option","handleClick","input","handleOptionClick","jsxs","cx"],"mappings":"qIAEA,MAAAA,EAAAC,GACEC,EAAA,IACE,MAAC,CAAA,MAAA,MACO,OAAA,MACC,QAAA,YACC,KAAA,OACH,OAAA,eACE,cAAA,QACO,eAAA,QACC,YAAA,IACH,GAAAD,EACR,SAAAC,EAAAA,IAAA,WAAA,CAAA,OAAA,sBAAA,CAAA,CAEoC,CAAA,gHCJ9C,MAAAC,EAAA,UACAC,EAAA,YAsBA,SAAAC,EAAA,CAAoC,MAAAC,EAClC,WAAAC,EACA,UAAAC,EACA,QAAAC,EAAA,CAAA,EACW,GAAAC,EACX,KAAAC,EACA,UAAAC,EACA,MAAAC,EACA,SAAAC,EACA,GAAAb,CAEF,EAAA,CACE,MAAAc,EAAAC,SAAA,IAAA,EAGAC,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAAC,GAAA,SAEE,GADA,CAAAJ,EAAA,SACAI,EAAA,MAAAhB,GAAAgB,EAAA,MAAAf,EAA4C,OAC5C,MAAAgB,EAAAL,EAAA,QAAA,iBAAA,QAAA,EACA,IAAAM,EAAA,KACA,QAAAC,EAAA,EAAAA,EAAAF,EAAA,OAAAE,IAEE,GADAF,EAAAE,CAAA,IACA,SAAA,cAAA,CACED,EAAAC,EACA,KAAA,CAGJD,IAAA,OACAF,EAAA,MAAAf,KACEmB,EAAAH,EAAAC,EAAA,CAAA,IAAA,MAAAE,EAAA,SAEFJ,EAAA,MAAAhB,KACEqB,EAAAJ,EAAAC,EAAA,CAAA,IAAA,MAAAG,EAAA,SACF,EAEF,gBAAA,iBAAA,UAAAN,CAAA,EACA,IAAA,SAAA,oBAAA,UAAAA,CAAA,CAAkE,EAAA,CAAA,CAAA,EAGpE,MAAAO,EAAAC,EAAAA,QAAA,IACEjB,EAAA,KAAAkB,GAAAA,EAAA,QAAAd,CAAA,EAAsD,CAAAJ,EAAAI,CAAA,CAAA,EAGxDe,EAAA,GAAA,CACE,MAAAC,EAAA,EAAA,cAAA,cAAA,OAAA,EACAA,GAAA,MAAAA,EAAA,OAAa,EAGfC,EAAA,CAAA,EAAAH,IAAA,CAIE,EAAA,eAAA,EACA,EAAA,gBAAA,EACAb,GAAA,MAAAA,EAAAa,EAAA,OACA,EAAA,cAAA,MAAqB,EAGvB,OAAAI,EAAA,KACE,MAAC,CAAA,UAAAC,EACY,2BACTxB,EAAA,SAAA,OACuBI,CACvB,EACF,SAAA,CAECN,GAAAJ,EAAA,IACC,QAAC,CAAA,UAAA,mDACW,QAAAQ,GAAAC,EACK,SAAAL,CAEd,CAAA,EACHyB,EAAA,KAEF,MAAC,CAAA,UAAA,6JACW,QAAAH,EACD,SAAA,CAET1B,EAAA,IAAA,QAAC,CAAA,KAAA,OACM,UAAA,+DACK,GAAAQ,GAAAC,EACA,KAAAA,EACV,MAAAc,EAAAA,EAAA,OAAA,OAAAA,EAAA,KAAA,EAAA,GAEiE,GAAAxB,CAE7D,CAAA,EACNC,EAAAA,IAAAF,EAAA,CAAA,UAAA,6DAAA,CAAA,EACuFE,EAAA,IACvF,MAAC,CAAA,UAAA,0QACW,IAAAa,EACL,SAAAN,EAAA,IAAAkB,GAAAzB,EAAA,IAGH,SAAC,CAAA,UAAA,mGAEW,QAAAiB,GAAAW,EAAAX,EAAAQ,CAAA,EACiC,SAAAA,EAAA,OAAA,OAAAA,EAAA,KAAA,CAEP,EAAAA,EAAA,KAJxB,CAAA,CAMf,CAAA,CACH,CAAA,CAAA,EACFpB,GAAAL,EAAA,IAEE,QAAC,CAAA,UAAA,mDACW,QAAAQ,GAAAC,EACK,SAAAJ,CAEd,CAAA,CACH,CAAA,CAAA,CAIR"}