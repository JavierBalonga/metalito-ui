{"version":3,"file":"Calendar.stories-a22079a1.js","sources":["../../src/components/icons/ArrowLeftIcon.tsx","../../src/components/icons/ArrowRightIcon.tsx","../../src/components/utils/capitalize.ts","../../src/components/Calendar/index.tsx"],"sourcesContent":["import { SVGAttributes } from \"react\";\n\nconst ArrowLeftIcon = (props: SVGAttributes<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      width=\"1em\"\n      height=\"1em\"\n      {...props}\n    >\n      <path d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n    </svg>\n  );\n};\n\nexport default ArrowLeftIcon;\n","import { SVGAttributes } from \"react\";\n\nconst ArrowRightIcon = (props: SVGAttributes<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      width=\"1em\"\n      height=\"1em\"\n      {...props}\n    >\n      <path d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n    </svg>\n  );\n};\n\nexport default ArrowRightIcon;\n","export default function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import { useMemo, useState } from \"react\";\nimport { cx } from \"class-variance-authority\";\nimport IconButton from \"../IconButton\";\nimport ArrowLeftIcon from \"../icons/ArrowLeftIcon\";\nimport ArrowRightIcon from \"../icons/ArrowRightIcon\";\nimport capitalize from \"../utils/capitalize\";\n\nexport interface CalendarProps {\n  /** Locale to use for formatting dates */\n  locale?: string;\n  /** The value of the calendar */\n  value?: Date;\n  /** Called when the value of the calendar changes */\n  onChange?: (date: Date) => void;\n}\n\nexport default function Calendar({\n  locale = navigator.language,\n  value: propsValue,\n  onChange,\n}: CalendarProps) {\n  const [month, setMonth] = useState(() => {\n    const month = new Date();\n    month.setDate(1);\n    return month;\n  });\n  const [localValue, setLocalValue] = useState<Date | null>(null);\n\n  const value = propsValue ?? localValue;\n\n  const formatAsWeekday = useMemo(() => {\n    const formater = new Intl.DateTimeFormat(locale, { weekday: \"short\" });\n    return (date: Date) => {\n      return capitalize(formater.format(date));\n    };\n  }, [locale]);\n\n  const formatAsMonth = useMemo(() => {\n    const formater = new Intl.DateTimeFormat(locale, { month: \"long\" });\n    return (date: Date) => {\n      return capitalize(formater.format(date));\n    };\n  }, [locale]);\n\n  const weekDays = useMemo(() => {\n    const firstMonday = new Date(\"1970-01-05T00:00:00.000Z\");\n    return Array.from({ length: 7 }, (_, i) => {\n      const date = new Date(firstMonday);\n      date.setDate(firstMonday.getDate() + i);\n      return date;\n    });\n  }, []);\n\n  const days = useMemo(() => {\n    const daysMonth = month.getMonth();\n    const daysYear = month.getFullYear();\n    const days: Date[] = [];\n    const current = new Date(daysYear, daysMonth, 1);\n    while (current.getMonth() === daysMonth) {\n      days.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n    return days;\n  }, [month]);\n\n  const handlePrevMonth = () => {\n    setMonth((prev) => {\n      const newMonth = new Date(prev);\n      newMonth.setMonth(newMonth.getMonth() - 1);\n      return newMonth;\n    });\n  };\n\n  const handleNextMonth = () => {\n    setMonth((prev) => {\n      const newMonth = new Date(prev);\n      newMonth.setMonth(newMonth.getMonth() + 1);\n      return newMonth;\n    });\n  };\n\n  const handleChange = (date: Date) => {\n    onChange?.(date);\n    setLocalValue(date);\n  };\n\n  return (\n    <div className=\"flex w-fit flex-col gap-2\">\n      {/* Month */}\n      <div className=\"flex flex-row items-center\">\n        <IconButton onClick={handlePrevMonth}>\n          <ArrowLeftIcon />\n        </IconButton>\n        <h5 className=\"grow text-center\">\n          {formatAsMonth(month)} {month.getFullYear()}\n        </h5>\n        <IconButton onClick={handleNextMonth}>\n          <ArrowRightIcon />\n        </IconButton>\n      </div>\n\n      {/* Weekdays */}\n      <div className=\"grid grid-cols-7 justify-items-center gap-1\">\n        {weekDays.map((day) => (\n          <span className=\"w-9 text-center\">{formatAsWeekday(day)}</span>\n        ))}\n      </div>\n\n      {/* Calendar days */}\n      <div className=\"grid grid-cols-7 justify-items-center gap-1\">\n        {/* First days placeholders  */}\n        {Array.from({ length: days[0].getDay() }, (_, i) => (\n          <div key={i} />\n        ))}\n\n        {days.map((day) => (\n          <IconButton\n            key={day.toISOString()}\n            className={cx(\n              \"border-none\",\n              day.valueOf() === value?.valueOf() && \"bg-white text-black\",\n            )}\n            onClick={() => handleChange(day)}\n          >\n            {day.getDate()}\n          </IconButton>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["ArrowLeftIcon","props","jsx","ArrowRightIcon","capitalize","str","Calendar","locale","propsValue","onChange","month","setMonth","useState","month2","localValue","setLocalValue","value","formatAsWeekday","useMemo","formater","date","formatAsMonth","weekDays","firstMonday","_","i","days","daysMonth","daysYear","days2","current","handlePrevMonth","prev","newMonth","handleNextMonth","handleChange","jsxs","IconButton","day","cx"],"mappings":"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"}