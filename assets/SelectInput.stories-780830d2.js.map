{"version":3,"file":"SelectInput.stories-780830d2.js","sources":["../../src/components/SelectInput/index.tsx"],"sourcesContent":["import { ComponentProps, MouseEvent, ReactNode } from \"react\";\nimport { cx } from \"class-variance-authority\";\n\nexport interface SelectOption {\n  value: string | number;\n  label?: string;\n}\n\nexport interface SelectInputProps\n  extends Omit<ComponentProps<\"input\">, \"onChange\"> {\n  /** The label for the input. */\n  label?: ReactNode;\n  /** The helper text for the input. */\n  helperText?: ReactNode;\n  /** The icon for the input. */\n  icon?: ReactNode;\n  /** The options for the select input. */\n  options?: SelectOption[];\n  /** The callback for when the input changes. */\n  onChange?: (value: string | number) => void;\n  // TODO: disabled, error, fullWidth\n}\n\nexport default function SelectInput({\n  label,\n  helperText,\n  icon,\n  options = [],\n  id,\n  name,\n  className,\n  onChange,\n  ...props\n}: SelectInputProps) {\n  const handleOptionClick = (\n    e: MouseEvent<HTMLButtonElement>,\n    option: SelectOption,\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChange?.(option.value);\n  };\n\n  return (\n    <div className={cx(\"group flex w-64 flex-col\", className)}>\n      {label && (\n        <label\n          className=\"px-1 py-1 text-base font-medium text-neutral-100\"\n          htmlFor={id || name}\n        >\n          {label}\n        </label>\n      )}\n      <div className=\"relative flex flex-row items-center gap-3 rounded border-2 border-neutral-800 bg-inherit px-4 py-3 transition-colors group-focus-within:border-neutral-100\">\n        <input\n          type=\"text\"\n          className=\"w-0 grow bg-transparent focus:outline-none\"\n          id={id || name}\n          name={name}\n          {...props}\n        />\n        {icon}\n        <div className=\"absolute left-0 top-full flex w-full translate-y-0 flex-col rounded border-2 border-neutral-100 bg-neutral-950 opacity-0 transition-all group-focus-within:translate-y-2 group-focus-within:opacity-100\">\n          {options.map((option) => (\n            <button\n              key={option.value}\n              className=\"p-2 text-left transition-colors hover:bg-neutral-100/10\"\n              onClick={(e) => handleOptionClick(e, option)}\n            >\n              {String(option.value) || option.label}\n            </button>\n          ))}\n        </div>\n      </div>\n      {helperText && (\n        <label\n          className=\"px-4 py-1 text-base font-medium text-neutral-400\"\n          htmlFor={id || name}\n        >\n          {helperText}\n        </label>\n      )}\n    </div>\n  );\n}\n"],"names":["SelectInput","label","helperText","icon","options","id","name","className","onChange","props","handleOptionClick","e","option","jsxs","cx","jsx"],"mappings":"mKAuBA,SAAAA,EAAA,CAAoC,MAAAC,EAClC,WAAAC,EACA,KAAAC,EACA,QAAAC,EAAA,CAAA,EACW,GAAAC,EACX,KAAAC,EACA,UAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,EAAA,CACE,MAAAC,EAAA,CAAAC,EAAAC,IAAA,CAIED,EAAA,eAAA,EACAA,EAAA,gBAAA,EACAH,GAAA,MAAAA,EAAAI,EAAA,MAAuB,EAGzB,OAAAC,EAAA,KAAA,MAAA,CAAA,UAAAC,EAAA,2BAAAP,CAAA,EAAA,SAAA,CAEKN,GAAAc,EAAA,IACC,QAAC,CAAA,UAAA,mDACW,QAAAV,GAAAC,EACK,SAAAL,CAEd,CAAA,EACHY,EAAAA,KAAA,MAAA,CAAA,UAAA,6JAAA,SAAA,CAGAE,EAAA,IAAA,QAAC,CAAA,KAAA,OACM,UAAA,6CACK,GAAAV,GAAAC,EACA,KAAAA,EACV,GAAAG,CACI,CAAA,EACNN,EACCY,MAAA,MAAA,CAAA,UAAA,0MAAA,SAAAX,EAAA,IAAAQ,GAAAG,EAAA,IAGG,SAAC,CAAA,UAAA,0DAEW,QAAAJ,GAAAD,EAAAC,EAAAC,CAAA,EACiC,SAAA,OAAAA,EAAA,KAAA,GAAAA,EAAA,KAEX,EAAAA,EAAA,KAJpB,CAAA,EAAA,CAOlB,EAAA,EACFV,GAAAa,EAAA,IAEE,QAAC,CAAA,UAAA,mDACW,QAAAV,GAAAC,EACK,SAAAJ,CAEd,CAAA,CACH,CAAA,CAAA,CAIR"}